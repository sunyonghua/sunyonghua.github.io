(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{53:function(t,e,o){t.exports=o.p+"assets/img/react-lifecycle.3ebf1ee1.png"},72:function(t,e,o){"use strict";o.r(e);var n=o(0),p=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"react-16-4-生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-16-4-生命周期"}},[t._v("#")]),t._v(" react 16.4 生命周期")]),t._v(" "),n("p",[n("img",{attrs:{src:o(53),alt:"生命周期图谱"}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("挂载时")]),t._v(" "),n("ul",[n("li",[t._v("constructor")])]),t._v(" "),n("blockquote",[n("p",[t._v("组件构造函数，初始化时调用，可在此处初始化state")])]),t._v(" "),n("ul",[n("li",[t._v("static getDerivedStateFromProps(props, state)")])]),t._v(" "),n("blockquote",[n("p",[t._v("调用 render 方法之前调用，并且在初始挂载及后续更新时都会被调用。它应返回一个对象来更新 state，如果返回 null 则不更新任何内容。")])]),t._v(" "),n("ul",[n("li",[t._v("render")])]),t._v(" "),n("blockquote",[n("p",[t._v("render() 方法是 class 组件中唯一必须实现的方法。\n返回类型一般为react元素(jsx)")])]),t._v(" "),n("ul",[n("li",[t._v("componentDidMount")])]),t._v(" "),n("blockquote",[n("p",[t._v("此方法会在组件挂载后立即调用，此处一般用于初始化请求\n还可以在此方法中添加订阅\n在componentDidMount中调用setState会触发额外渲染，在浏览器更新屏幕之前，render调用两次")])])]),t._v(" "),n("li",[n("p",[t._v("更新时")]),t._v(" "),n("ul",[n("li",[t._v("static getDerivedStateFromProps()")]),t._v(" "),n("li",[t._v("shouldComponentUpdate(nextProps,nextState)")])]),t._v(" "),n("blockquote",[n("p",[t._v("当 props 或 state 发生变化时，shouldComponentUpdate() 会在渲染执行之前被调用。返回值默认为 true\n此方法仅作为性能优化的方式而存在。不要企图依靠此方法来“阻止”渲染，因为这可能会产生 bug。你应该考虑使用内置的 PureComponent 组件，而不是手动编写 shouldComponentUpdate()。PureComponent 会对 props 和 state 进行浅层比较，并减少了跳过必要更新的可能性。")])]),t._v(" "),n("ul",[n("li",[t._v("render")]),t._v(" "),n("li",[t._v("getSnapshotBeforeUpdate(prevProps, prevState)")])]),t._v(" "),n("blockquote",[n("p",[t._v("DOM更新前捕获一些信息")])]),t._v(" "),n("ul",[n("li",[t._v("componentDidUpdate(prevProps, prevState, snapshot)")])]),t._v(" "),n("blockquote",[n("p",[t._v("你也可以在 componentDidUpdate() 中直接调用 setState()，但请注意它必须被包裹在一个条件语句里\nsnapshot 是getSnapshotBeforeUpdate函数的返回值，不实现则为undefined")])])]),t._v(" "),n("li",[n("p",[t._v("卸载")]),t._v(" "),n("ul",[n("li",[t._v("componentnWillUnmount")])]),t._v(" "),n("blockquote",[n("p",[t._v("componentWillUnmount() 会在组件卸载及销毁之前直接调用。在此方法中执行必要的清理操作，例如，清除 timer，取消网络请求或清除在 componentDidMount() 中创建的订阅等。")])])])])])}),[],!1,null,null,null);e.default=p.exports}}]);